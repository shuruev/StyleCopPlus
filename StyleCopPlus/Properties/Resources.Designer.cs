//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace StyleCopPlus.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("StyleCopPlus.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap AtSign {
            get {
                object obj = ResourceManager.GetObject("AtSign", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error.
        /// </summary>
        internal static string CaptionError {
            get {
                return ResourceManager.GetString("CaptionError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Information.
        /// </summary>
        internal static string CaptionInformation {
            get {
                return ResourceManager.GetString("CaptionInformation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Warning.
        /// </summary>
        internal static string CaptionWarning {
            get {
                return ResourceManager.GetString("CaptionWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap CurlBottom {
            get {
                object obj = ResourceManager.GetObject("CurlBottom", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap CurlBottomLeft {
            get {
                object obj = ResourceManager.GetObject("CurlBottomLeft", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap CurlBottomRight {
            get {
                object obj = ResourceManager.GetObject("CurlBottomRight", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap CurlBottomRightTransparent {
            get {
                object obj = ResourceManager.GetObject("CurlBottomRightTransparent", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap CurlRight {
            get {
                object obj = ResourceManager.GetObject("CurlRight", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap CurlTopRight {
            get {
                object obj = ResourceManager.GetObject("CurlTopRight", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disabled.
        /// </summary>
        internal static string Disabled {
            get {
                return ResourceManager.GetString("Disabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do not check.
        /// </summary>
        internal static string DoNotCheck {
            get {
                return ResourceManager.GetString("DoNotCheck", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select a rule from the list above..
        /// </summary>
        internal static string EmptyExampleDescription {
            get {
                return ResourceManager.GetString("EmptyExampleDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enabled.
        /// </summary>
        internal static string Enabled {
            get {
                return ResourceManager.GetString("Enabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap English {
            get {
                object obj = ResourceManager.GetObject("English", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Extended rule {0} from StyleCop+ conflicts with enabled original rule from StyleCop. Disable {1} rule in StyleCop if you want to use extended StyleCop+ rule..
        /// </summary>
        internal static string ExtendedRuleConflictError {
            get {
                return ResourceManager.GetString("ExtendedRuleConflictError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Entities.
        /// </summary>
        internal static string GroupEntities {
            get {
                return ResourceManager.GetString("GroupEntities", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fields and Properties.
        /// </summary>
        internal static string GroupFields {
            get {
                return ResourceManager.GetString("GroupFields", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Formatting.
        /// </summary>
        internal static string GroupFormatting {
            get {
                return ResourceManager.GetString("GroupFormatting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maintainability.
        /// </summary>
        internal static string GroupMaintainability {
            get {
                return ResourceManager.GetString("GroupMaintainability", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Methods, Events and Delegates.
        /// </summary>
        internal static string GroupMethods {
            get {
                return ResourceManager.GetString("GroupMethods", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Parameters, Variables and Labels.
        /// </summary>
        internal static string GroupParameters {
            get {
                return ResourceManager.GetString("GroupParameters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Service / Options.
        /// </summary>
        internal static string GroupSpecial {
            get {
                return ResourceManager.GetString("GroupSpecial", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap Help {
            get {
                object obj = ResourceManager.GetObject("Help", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap NameLength {
            get {
                object obj = ResourceManager.GetObject("NameLength", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Edit &quot;{0}&quot; Naming Rule.
        /// </summary>
        internal static string NamingRuleEditorCaption {
            get {
                return ResourceManager.GetString("NamingRuleEditorCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please specify one or several naming templates.
        ///You can use plain text as well as naming macros,
        ///e.g. I$(AaBb) or $(Aa_Bb)_Throws_Exception..
        /// </summary>
        internal static string NamingRuleEditorHelp {
            get {
                return ResourceManager.GetString("NamingRuleEditorHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to It seems that your rule definition string has wrong syntax.
        ///
        ///Please check that:
        ///- it doesn&apos;t contain whitespace characters
        ///- all macros are written correctly
        ///- string literals don&apos;t contain any characters except letters, digits and underscore
        ///- you are using &quot;Turn off&quot; option instead of empty definition.
        /// </summary>
        internal static string NamingRuleEditorWarning {
            get {
                return ResourceManager.GetString("NamingRuleEditorWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Are you sure want to cancel all modification for this setting?
        ///
        ///It will be reset to its inherited (default) value:
        ///- {0}.
        /// </summary>
        internal static string ResetSettingQuestion {
            get {
                return ResourceManager.GetString("ResetSettingQuestion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap RightArrow {
            get {
                object obj = ResourceManager.GetObject("RightArrow", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap RuleDisabled {
            get {
                object obj = ResourceManager.GetObject("RuleDisabled", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap RuleEnabled {
            get {
                object obj = ResourceManager.GetObject("RuleEnabled", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Initializes a new instance..
        /// </summary>
        internal static string StandardConstructorSummaryText {
            get {
                return ResourceManager.GetString("StandardConstructorSummaryText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Finalizes an instance..
        /// </summary>
        internal static string StandardDestructorSummaryText {
            get {
                return ResourceManager.GetString("StandardDestructorSummaryText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap StyleCopPlusLogo {
            get {
                object obj = ResourceManager.GetObject("StyleCopPlusLogo", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap StyleCopPlusTitle {
            get {
                object obj = ResourceManager.GetObject("StyleCopPlusTitle", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap TwoLetters {
            get {
                object obj = ResourceManager.GetObject("TwoLetters", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to version {0}.{1}.
        /// </summary>
        internal static string Version {
            get {
                return ResourceManager.GetString("Version", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap Warning {
            get {
                object obj = ResourceManager.GetObject("Warning", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DisabledAdvancedNamingRules.
        /// </summary>
        internal static string WarningDisabledAdvancedNamingRulesCode {
            get {
                return ResourceManager.GetString("WarningDisabledAdvancedNamingRulesCode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Advanced naming rules are currently disabled.
        ///You can enable them from Rules tab..
        /// </summary>
        internal static string WarningDisabledAdvancedNamingRulesDescription {
            get {
                return ResourceManager.GetString("WarningDisabledAdvancedNamingRulesDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DontUseOriginalNamingRules.
        /// </summary>
        internal static string WarningDontUseOriginalNamingRulesCode {
            get {
                return ResourceManager.GetString("WarningDontUseOriginalNamingRulesCode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to It seems that some original naming rules (SA13xx) are still enabled.
        ///There is no need to use them together with advanced naming rules..
        /// </summary>
        internal static string WarningDontUseOriginalNamingRulesDescription {
            get {
                return ResourceManager.GetString("WarningDontUseOriginalNamingRulesDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to http://stylecopplus.codeplex.com/wikipage?title=Warnings#{0}.
        /// </summary>
        internal static string WarningUrl {
            get {
                return ResourceManager.GetString("WarningUrl", resourceCulture);
            }
        }
    }
}
