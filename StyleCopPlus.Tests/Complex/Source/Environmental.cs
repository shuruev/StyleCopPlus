#region AdvancedNamingRules // Skipping auto-generated files

//# (AdvancedNaming_Namespace = $(AaBb))

//# [ERROR]
//# Namespace name is incorrect.
namespace StyleCopPlus.TESTS
{
}
//# [END]

//# [OK]
//# Incorrect namespace name is skipped due to <auto-generated> node.
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// </auto-generated>
//------------------------------------------------------------------------------
namespace StyleCopPlus.TESTS
{
}
//# [END]

//# [OK]
//# Incorrect namespace name is skipped due to <auto-generated> node.
// <auto-generated />
namespace StyleCopPlus.TESTS
{
}
//# [END]

#endregion

#region AdvancedNamingRules // Suppressing

//# (AdvancedNaming_MethodGeneral = $(AaBb))
//# (AdvancedNaming_Parameter = X)

//# [ERROR]
//# Method name is incorrect.
namespace StyleCopPlus.Tests
{
	public class TestClass
	{
		public void Test_Method()
		{
		}
	}
}
//# [END]

//# [ERROR]
//# Parameter name is incorrect.
namespace StyleCopPlus.Tests
{
	public class TestClass
	{
		public TestClass(int X1)
		{
		}
	}
}
//# [END]

//# [OK]
//# Method name is incorrect, but the warning is suppressed.
namespace StyleCopPlus.Tests
{
	public class TestClass
	{
		[SuppressMessage(
			"StyleCopPlus.StyleCopPlusRules",
			"SP0100:AdvancedNamingRules",
			Justification = "Testing suppression.")]
		public void Test_Method()
		{
		}
	}
}
//# [END]

//# [OK]
//# Parameter name is incorrect, but the warning is suppressed.
namespace StyleCopPlus.Tests
{
	public class TestClass
	{
		[SuppressMessage(
			"StyleCopPlus.StyleCopPlusRules",
			"SP0100:AdvancedNamingRules",
			Justification = "Testing suppression.")]
		public TestClass(int X1)
		{
		}
	}
}
//# [END]

#endregion

#region CodeLineMustNotEndWithWhitespace // Suppressing

//# [ERROR]
//# There is excess whitespace at the end of the line.
namespace StyleCopPlus.Tests
{
	public class TestClass
	{
		public void TestMethod()
		{
			int a = 10; 
		}
	}
}
//# [END]

//# [OK]
//# There is excess whitespace at the end of the line, but the warning is suppressed.
namespace StyleCopPlus.Tests
{
	public class TestClass
	{
		[SuppressMessage(
			"StyleCopPlus.StyleCopPlusRules",
			"SP2000:CodeLineMustNotEndWithWhitespace",
			Justification = "Testing suppression.")]
		public void TestMethod()
		{
			int a = 10; 
		}
	}
}
//# [END]

#endregion

#region CheckAllowedIndentationCharacters // Suppressing

//# (SP2001_Mode = Tabs:False)

//# [ERROR]
//# One line starts with tabs and whitespace.
namespace StyleCopPlus.Tests
{
	public class TestClass
	{
		public void TestMethod()
		{
			 int a = 10;
		}
	}
}
//# [END]

//# [OK]
//# One line starts with tabs and whitespace, but the warning is suppressed.
namespace StyleCopPlus.Tests
{
	public class TestClass
	{
		[SuppressMessage(
			"StyleCopPlus.StyleCopPlusRules",
			"SP2001:CheckAllowedIndentationCharacters",
			Justification = "Testing suppression.")]
		public void TestMethod()
		{
			 int a = 10;
		}
	}
}
//# [END]

//# [OK]
//# Don't count aligned * as indention errors.
namespace StyleCopPlus.Tests
{
	/*
	 * multi-line
	 * comment
	 */
}
//# [END]

#endregion

#region CheckWhetherLastCodeLineIsEmpty // Suppressing

//# (SP2002_Mode = Empty)

//# [ERROR]
//# Source file without a line break at the end.
namespace StyleCopPlus.Tests
{
}//# [END]

//# [OK]
//# Source file without a line break at the end, but the warning is suppressed.
[SuppressMessage(
	"StyleCopPlus.StyleCopPlusRules",
	"SP2002:CheckWhetherLastCodeLineIsEmpty",
	Justification = "Testing suppression.")]
namespace StyleCopPlus.Tests
{
}//# [END]

#endregion

#region CodeLineMustNotBeLongerThan // Suppressing

//# (SP2100_Limit = 60:4)

//# [ERROR]
//# Comment in method body is too long.
namespace StyleCopPlus.Tests
{
	public class TestClass
	{
		public void TestMethod()
		{
			// very-very-very-very-very-very-very-very long line.
			int a = 10;
		}
	}
}
//# [END]

//# [ERROR]
//# Comment in method declaration is too long.
namespace StyleCopPlus.Tests
{
	public class TestClass
	{
		public void TestMethod(/*very-very-very-very-very-very-very-very long line*/)
		{
			int a = 10;
		}
	}
}
//# [END]

//# [OK]
//# Comment in method body is too long, but the warning is suppressed.
namespace StyleCopPlus.Tests
{
	public class TestClass
	{
		[SuppressMessage(
			"StyleCopPlus.StyleCopPlusRules",
			"SP2100:CodeLineMustNotBeLongerThan",
			Justification = "Testing suppression.")]
		public void TestMethod()
		{
			// very-very-very-very-very-very-very-very long line.
			int a = 10;
		}
	}
}
//# [END]

//# [OK]
//# Comment in method declaration is too long, but the warning is suppressed.
namespace StyleCopPlus.Tests
{
	public class TestClass
	{
		[SuppressMessage(
			"StyleCopPlus.StyleCopPlusRules",
			"SP2100:CodeLineMustNotBeLongerThan",
			Justification = "Testing suppression.")]
		public void TestMethod(/*very-very-very-very-very long line*/)
		{
			int a = 10;
		}
	}
}
//# [END]

#endregion

#region MethodMustNotContainMoreLinesThan // Suppressing

//# (SP2101_Limit = 3)

//# [ERROR]
//# Method size is too long.
namespace StyleCopPlus.Tests
{
	public class TestClass
	{
		public void TestMethod()
		{
			int a = 10;
			int b = 20;
		}
	}
}
//# [END]

//# [OK]
//# Method size is too long, but the warning is suppressed.
namespace StyleCopPlus.Tests
{
	public class TestClass
	{
		[SuppressMessage(
			"StyleCopPlus.StyleCopPlusRules",
			"SP2101:MethodMustNotContainMoreLinesThan",
			Justification = "Testing suppression.")]
		public void TestMethod()
		{
			int a = 10;
			int b = 20;
		}
	}
}
//# [END]

#endregion

#region PropertyMustNotContainMoreLinesThan

//# (SP2102_Limit = 3)

//# [ERROR]
//# Property getter is too long.
namespace StyleCopPlus.Tests
{
	public class TestClass
	{
		public int Count
		{
			get
			{
				int a = 10;
				return 0;
			}
		}
	}
}
//# [END]

//# [OK]
//# Property getter is too long, but the warning is suppressed.
namespace StyleCopPlus.Tests
{
	public class TestClass
	{
		[SuppressMessage(
			"StyleCopPlus.StyleCopPlusRules",
			"SP2102:PropertyMustNotContainMoreLinesThan",
			Justification = "Testing suppression.")]
		public int Count
		{
			get
			{
				int a = 10;
				return 0;
			}
		}
	}
}
//# [END]

#endregion
